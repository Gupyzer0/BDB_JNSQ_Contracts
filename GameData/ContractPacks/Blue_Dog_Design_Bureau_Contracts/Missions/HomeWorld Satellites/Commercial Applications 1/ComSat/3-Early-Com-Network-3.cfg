CONTRACT_TYPE
{
	name = EarlyComNetwork3
	title = Early Communications Network (3 Satellites)
	group = CommApp


	description = <b>Program: Early Commercial Applications<br>Type: <color=green>Required</color></b><br><br>Now that you've demonstrated the ability of satellites to relay communications via one-off launches, it's time to create a network of them to provide full coverage of the Earth.<br><br>Launch a 4-satellite communication network where the satellites are sufficiently dispersed and in high enough orbits to provide near-complete coverage of the Earth's surface.<br><br><b><color=white>NOTE: You may choose only the 3-satellite or 4-satellite contract.</color></b><br><br><b><color=yellow>NOTE: The satellites will be destroyed upon completion of the contract. This simulates transfer of the payload back to the customer.</color>

	synopsis = Launch a 3 satellite Communications Network

	completedMessage = Congratulations! The network is up and transmitting, and our shake-out testing is complete!

	sortKey = 901

	cancellable = true
	declinable = true
	autoAccept = false
	minExpiry = 0
	maxExpiry = 0
	maxCompletions = 1
	maxSimultaneous = 1
	deadline = 365
	
	targetBody = HomeWorld()

	// ************ REWARDS ************
	prestige = Trivial       // 1.0x
	advanceFunds = @Blue_Dog_Design_Bureau_Contracts:Kerbucks2
	rewardFunds = @Blue_Dog_Design_Bureau_Contracts:Kerbucks4
	rewardScience = 0
	failureFunds = @advanceFunds + 10000
    rewardReputation = 150
	failureReputation = 0

	// ************ REQUIREMENTS ************
	
	REQUIREMENT
	{	
		name = CompleteContract
		type = CompleteContract
		contractType = FirstComSat
	}

	REQUIREMENT
	{
		name = AcceptContract
		type = AcceptContract
		contractType = EarlyComSat
		invertRequirement = true
	}

	REQUIREMENT
	{
		name = AcceptContract
		type = AcceptContract
		contractType = EarlyComNetwork4
		invertRequirement = true
	}
	
	// ComSat I
	PARAMETER
	{
		name = CommSat1
		type = VesselParameterGroup

		define = CommSat I
		disableOnStateChange = false

		PARAMETER
		{
			name = IsNotVessel
			type = IsNotVessel

			vessel = CommSat II
		}

		PARAMETER
		{
			name = IsNotVessel
			type = IsNotVessel

			vessel = CommSat III
		}
		PARAMETER
        {
            name = RequiredParts
            type = Any
          
            title = You'll need any of the required parts

            PARAMETER
            {
                type = PartValidation
                part = bluedog_Telstar_Core
                //disableOnStateChange = True
            }
            PARAMETER
            {
                type = PartValidation
                part = bluedog_Relay_Core
                //disableOnStateChange = True
            }
        }
        PARAMETER
        {
            name = HasAntenna
            type = HasAntenna

            antennaType = RELAY
        }
		PARAMETER
		{
			name = Orbit
			type = Orbit
			disableOnStateChange = false

			// Minimum distance to have line of sight for 3 satellites for Kerbin.
			minPeA = @/targetBody.Radius()

			// Pretty close to circular
			maxEccentricity = 0.004
		}
	}

	PARAMETER
	{
		name = CommSat2
		type = VesselParameterGroup

		define = CommSat II
		disableOnStateChange = false

		PARAMETER
		{
			name = IsNotVessel
			type = IsNotVessel

			vessel = CommSat III
		}
		PARAMETER
        {
            name = RequiredParts
            type = Any
          
            title = You'll need any of the required parts

            PARAMETER
            {
                type = PartValidation
                part = bluedog_Telstar_Core
                //disableOnStateChange = True
            }
            PARAMETER
            {
                type = PartValidation
                part = bluedog_Relay_Core
                //disableOnStateChange = True
            }
        }
        PARAMETER
        {
            name = HasAntenna
            type = HasAntenna

            antennaType = RELAY
        }
		PARAMETER
		{
			name = Orbit
			type = Orbit
			disableOnStateChange = false

			// Minimum distance to have line of sight for 3 satellites for Kerbin.
			minPeA = @/targetBody.Radius()

			// Pretty close to circular
			maxEccentricity = 0.004
		}
	}

	PARAMETER
	{
		name = CommSat3
		type = VesselParameterGroup

		define = CommSat III
		disableOnStateChange = false

		PARAMETER
		{
			name = IsNotVessel
			type = IsNotVessel

			vessel = CommSat I
		}
		PARAMETER
        {
            name = RequiredParts
            type = Any
          
            title = You'll need any of the required parts

            PARAMETER
            {
                type = PartValidation
                part = bluedog_Telstar_Core
                //disableOnStateChange = True
            }
            PARAMETER
            {
                type = PartValidation
                part = bluedog_Relay_Core
                //disableOnStateChange = True
            }
        }
        PARAMETER
        {
            name = HasAntenna
            type = HasAntenna

            antennaType = RELAY
        }
		PARAMETER
		{
			name = Orbit
			type = Orbit
			disableOnStateChange = false

			// Minimum distance to have line of sight for 3 satellites for Kerbin.
			minPeA = @/targetBody.Radius()

			// Pretty close to circular
			maxEccentricity = 0.004
		}
	}

	PARAMETER
	{
		name = Duration
		type = Duration

		duration = 2d

		preWaitText = Testing time after network up
		waitingText = Performing shake-out testing
		completionText = Shake-out testing completed
	}

	BEHAVIOUR
	{
		name = TransferVessel
		type = DestroyVessel
		onState = CONTRACT_SUCCESS
		vessel = CommSat I
		vessel = CommSat II
		vessel = CommSat III
	}

	BEHAVIOUR
	{
		name = VesselDestroyed
		type = DialogBox
		DIALOG_BOX
		{
			title = Vessel Ownership Transferred
			condition = CONTRACT_SUCCESS
			position = CENTER
			width = 0.5
			TEXT
			{
				text = The contract has been completed successfully and the satellites have been transferred to the customer.
			}
		}
	}
}