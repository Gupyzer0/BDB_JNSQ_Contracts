CONTRACT_TYPE
{
    name = Corona_KH1
    group = CoronaProgram
	title = Perform photo reconnaissance from a polar orbit of @targetBody.
    genericTitle = Perform photo reconnaissance.

	description = Welcome back, Kommander. We have just intercepted an encrypted transmission suggesting that our rivals, those Kommy Krussians, may have set up suspicious new activities in several areas on @targetBody. Our Kovert Ops units are out of reach, so we want you to get up there and take pictures of the suspected areas. If there's any Krussian activity there, we will know. Oh and you will have to return the film canister back to base, we haven't figured out how to turn black and white into 1's and 0's yet.
    genericDescription = Perform photo reconnaissance of the specified areas.
	
    synopsis = <color=yellow>Launch a Keyhole KH-1 recon satellite into space around @targetBody and perform photo recon of the specified areas.</color>
	notes = In assembly, use the tag 'KH1' to find components fitting for this mission. Suggested Launcher: Thor-Agena A.
    completedMessage = Either those Krussians have developed excellent camouflage, or we really are just looking at a Kerbal-shaped rock formation. We'll get them next time!

    agent = cia
    maxSimultaneous = 1
    targetBody = HomeWorld()
	maxCompletions = 10 //10 Launches
    deadline = 90
	minExpiry = 90
	maxExpiry = 90
	advanceFunds = Random(@Blue_Dog_Design_Bureau_Contracts:Kerbucks05,@Blue_Dog_Design_Bureau_Contracts:Kerbucks075)
    rewardFunds = Random(@Blue_Dog_Design_Bureau_Contracts:Kerbucks1,@Blue_Dog_Design_Bureau_Contracts:Kerbucks105)
    rewardReputation = Random(4.0, 8.0)
	
    // Hardcoded list of specific experiments
    DATA
    {
        name = experimentslist
		title = experimentslist
		type = List<ScienceExperiment>
        hidden = true

        experiments = [bd_mapping]
    }
	
	// Randomly select 1 valid biome to study from low space.
    DATA
    {
		type = List<ScienceSubject>
        hidden = true

        scienceSubjectsTemp1 = AllScienceSubjectsByBodyExperiment([@targetBody], @experiments)
		scienceSubjectsTemp2 = @scienceSubjectsTemp1.Where(s => !s.Biome().IsKSC())
		scienceSubjectsTemp3 = @scienceSubjectsTemp2.Where(s => s.Situation() == InSpaceLow)
        scienceSubjects = @scienceSubjectsTemp3.Random(1)
    }
	
	PARAMETER
    {
        name = KH-1 Recon Satellite
        type = VesselParameterGroup
        title = Launch a new KH-1 recon satellite
		
		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			title = The satellite must be a new vessel
		}
		
		PARAMETER
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
		}

		// Parts
		PARAMETER
		{
			name = PartValidationA
			type = PartValidation
			part = bluedog_Agena_EngineShroud
			
			title = You must have an Agena-A equipment rack
		}

        // Orbit
		PARAMETER
		{
			name = Orbit
			type = Orbit
			title = Achieve the specified polar low space orbit
			
			maxApA = Random(0.4,0.5) * @targetBody.SpaceAltitudeThreshold()
			maxPeA = (Random(0.3,0.4) * @targetBody.SpaceAltitudeThreshold()) < @targetBody.AtmosphereAltitude() ? @targetBody.AtmosphereAltitude() :  (Random(0.3,0.4) * @targetBody.SpaceAltitudeThreshold())
			maxEccentricity = 0.1
			minInclination = Random(70,85)
			maxInclination = Random(90,105)
			disableOnStateChange = true
		}
	}

	PARAMETER
	{
		name = CollectScience
		type = CollectScience

		title = Take a photo of the specified area
		biome = @scienceSubject.Biome()
		situation = @scienceSubject.Situation()
		experiment = @scienceSubject.Experiment()
		recoveryMethod = Recover

		ITERATOR
		{
			type = ScienceSubject
			scienceSubject = @/scienceSubjects
		}
	}
	
	PARAMETER
	{
		name = ReturnHome
		type = ReturnHome
		title = Recover the film canister
	}

	// Must have flown Discoverer 1
	REQUIREMENT
	{
        name = CompleteContract
        type = CompleteContract
        contractType = Discoverer-1
        minCount =1
        maxCount =1
        cooldownDuration = 0d
	}

	// Deactivate this if a KH-4 mission is flown
	REQUIREMENT
    {
        name = Any
		type = Any
		invertRequirement = true
		
		REQUIREMENT
        {
            name = CompleteContract
            type = CompleteContract
            contractType = Corona_KH4
            minCount = 1
            cooldownDuration = 0d
        }
    }
}
