CONTRACT_TYPE
{
    name = Gambit_KH7
    group = GambitKH7
	title = Perform photo surveillance from a polar orbit of @targetBody.
    genericTitle = Perform photo surveillance.

    genericDescription = Perform photo surveillance of the specified areas.
	description = Welcome back, Kommander. Despite our previous reconnaissance finding mostly strange rock formations, we believe the Krussians are once again at it on @targetBody. We want you to take a more modern "Gambit" surveillance satellite into orbit of @targetBody, scan the specified areas with a more advanced camera system and return the film back to base. This message is top secret and will self-destruct in 3...2..1.... Wait, did Jeb get away with the explosives again?

	notes = In assembly, use the tag 'KH7' to find components fitting for this mission. Suggested Launcher: Atlas LV-3A - Agena-D.
    synopsis = <color=yellow>Launch a KH-7 Gambit surveillance satellite into space around @targetBody and perform photo surveillance of the specified areas.</color>
    completedMessage = Look at those krussians drinking vodka all day... Wait ... Theres a rocket next to them so ... Ha! silly Krussies.

    agent = nro
 	maxCompletions = 54 // 54 KH-8 missions flown
    maxSimultaneous = 1
    targetBody = HomeWorld()
	deadline = 90
	minExpiry = 90
	maxExpiry = 90
	cancellable = true
    declinable = true
	advanceFunds = Random(@Blue_Dog_Design_Bureau_Contracts:Kerbucks075,@Blue_Dog_Design_Bureau_Contracts:Kerbucks1)
    rewardFunds = Random(@Blue_Dog_Design_Bureau_Contracts:Kerbucks105,@Blue_Dog_Design_Bureau_Contracts:Kerbucks2)
    rewardReputation = Random(4.0, 8.0)
	
    // Hardcoded list of specific experiments
    DATA
    {
        name = experimentslist
		title = experimentslist
		type = List<ScienceExperiment>
        hidden = true

        experiments = [bd_surveillance]
    }
	
	// Randomly select 4 valid biomes to study from low space.
    DATA
    {
		type = List<ScienceSubject>
        hidden = true

        scienceSubjectsTemp1 = AllScienceSubjectsByBodyExperiment([@targetBody], @experiments)
		scienceSubjectsTemp2 = @scienceSubjectsTemp1.Where(s => !s.Biome().IsKSC())
		scienceSubjectsTemp3 = @scienceSubjectsTemp2.Where(s => s.Situation() == InSpaceLow)
        scienceSubjects = @scienceSubjectsTemp3.Random(4)
    }
	
	PARAMETER
    {
        name = Gamble Surveillance Satellite
        type = VesselParameterGroup
        title = Launch a new Gamble surveillance satellite
		
		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			title = The satellite must be a new vessel
		}
		
		PARAMETER
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
		}
		
		PARAMETER
		{
			name = PartValidation
			type = PartValidation
			part = bluedog_Keyhole_Camera_KH7
			
			title = You should take a proper camera with you
		}
		
		//Orbit with random components to be both somewhat unpredictable and scalable to any size body. PeA needs to be below High Space to ensure both space situations are guaranteed to be within the parameters.
		PARAMETER
		{
			name = Orbit
			type = Orbit
			title = Achieve the specified polar low space orbit
			
			maxApA = Random(0.4,0.5) * @targetBody.SpaceAltitudeThreshold()
			maxPeA = (Random(0.3,0.4) * @targetBody.SpaceAltitudeThreshold()) < @targetBody.AtmosphereAltitude() ? (1.1 * @targetBody.AtmosphereAltitude()) : (Random(0.3,0.4) * @targetBody.SpaceAltitudeThreshold())
			maxEccentricity = 0.1
			minInclination = Random(70,85)
			maxInclination = Random(90,105)
			disableOnStateChange = true
		}
    }

	PARAMETER
	{
		name = CollectScience
		type = CollectScience

		title = Take photos of the specified areas
		biome = @scienceSubject.Biome()
		situation = @scienceSubject.Situation()
		experiment = @scienceSubject.Experiment()
		recoveryMethod = Recover

		ITERATOR
		{
			type = ScienceSubject
			scienceSubject = @/scienceSubjects
		}
	}
	
	PARAMETER
	{
		name = ReturnHome
		type = ReturnHome
		title = Recover the film canister
	}
		
	// This requirement specifies the nodes that the parts with the required experiments currently reside in. Deliberately not specifying particular parts, so any part with the experiment can be used. If all applicable parts get placed to later nodes, could lead to issues however.
	REQUIREMENT
    {
        name = TechResearched
		type = TechResearched
		tech = basicScience
    }
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = Corona_KH4B
		minCount = 5
		cooldownDuration = 0d
	}

}
