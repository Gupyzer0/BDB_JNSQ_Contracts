CONTRACT_TYPE
{
    name = Corona_KH4B
    group = CoronaProgram
	title = Perform photo reconnaissance from a polar orbit of @targetBody.
    genericTitle = Perform photo reconnaissance.

	description = 
    genericDescription = Perform photo reconnaissance of the specified areas.
	
	notes = The KH-4 was first successfully launched by a Thorad-SLV2G Agena-D on September 15, 1967, from the Vandenberg AFB Launch Complex.
    synopsis = <color=yellow>Launch a Keyhole KH-4B recon satellite with an Agena-D upperstage into space around @targetBody and perform photo recon of the specified areas.</color>
    completedMessage = Mission Success!.

    agent = nro
    maxSimultaneous = 1
    maxCompletions = 17 //KH-4B Missions flown
	deadline = 90
	minExpiry = 90
	maxExpiry = 90
	advanceFunds = Random(@Blue_Dog_Design_Bureau_Contracts:Kerbucks05,@Blue_Dog_Design_Bureau_Contracts:Kerbucks075)
    rewardFunds = Random(@Blue_Dog_Design_Bureau_Contracts:Kerbucks105,@Blue_Dog_Design_Bureau_Contracts:Kerbucks2)
    rewardReputation = Random(4.0, 8.0)

    targetBody = HomeWorld()
	
    // Hardcoded list of specific experiments
    DATA
    {
        name = experimentslist
		title = experimentslist
		type = List<ScienceExperiment>
        hidden = true

        experiments = [bd_mapping]
    }
	
	// Randomly select 3 valid biomes to study from low space.
    DATA
    {
		type = List<ScienceSubject>
        hidden = true

        scienceSubjectsTemp1 = AllScienceSubjectsByBodyExperiment([@targetBody], @experiments)
		scienceSubjectsTemp2 = @scienceSubjectsTemp1.Where(s => !s.Biome().IsKSC())
		scienceSubjectsTemp3 = @scienceSubjectsTemp2.Where(s => s.Situation() == InSpaceLow)
        scienceSubjects = @scienceSubjectsTemp3.Random(3)
    }
	
	PARAMETER
    {
        name = KH-4B Recon Satellite
        type = VesselParameterGroup
        title = Launch a new KH-4B Corona recon satellite
		
		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			title = The satellite must be a new vessel
		}
		
		PARAMETER
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
		}

		// Required Parts ---------------------------------
		PARAMETER
		{
			type = PartValidation
			part = bluedog_Corona_Pod //2
			minCount = 2
			disableOnStateChange = True
		}
		PARAMETER
		{
			type = PartValidation
			part = bluedog_Corona_Parachute //2
			minCount = 2
			disableOnStateChange = True
		}
		PARAMETER
		{
			type = PartValidation
			part = bluedog_Corona_Heatshield //2
			minCount = 2
			disableOnStateChange = True
		}
		PARAMETER
		{
			type = PartValidation
			part = bluedog_Corona_Retro //2
			minCount = 2
			disableOnStateChange = True
		}
		PARAMETER
		{
			type = PartValidation
			part = bluedog_Keyhole_DualAdapter
			disableOnStateChange = True
		}
		PARAMETER
		{
			type = PartValidation
			part = bluedog_Decoupler_0p9375m
			disableOnStateChange = True
		}
		PARAMETER
		{
			type = PartValidation
			part = bluedog_Keyhole_RVAdapter
			disableOnStateChange = True
		}
		PARAMETER
		{
			type = PartValidation
			part = bluedog_Keyhole_Camera_KH4B
			disableOnStateChange = True
		}
		PARAMETER
		{
			type = PartValidation
			part = bluedog_Agena_Avionics
			disableOnStateChange = True
		}
		PARAMETER
		{
			type = PartValidation
			part = bluedog_Agena_Tank_Long
			disableOnStateChange = True
		}
		PARAMETER
		{
			type = PartValidation
			part = bluedog_Agena_EngineMount
			disableOnStateChange = True
		}
		PARAMETER
		{
			type = PartValidation
			part = bluedog_Agena_EquipmentRack
			disableOnStateChange = True
		}
		PARAMETER
		{
			type = PartValidation
			part = bluedog_Agena_Engine_XLR81
			disableOnStateChange = True
		}
		// /Required Parts ---------------------------------
		
		//Orbit with random components to be both somewhat unpredictable and scalable to any size body. PeA needs to be below High Space to ensure both space situations are guaranteed to be within the parameters.
		PARAMETER
		{
			name = Orbit
			type = Orbit
			title = Achieve the specified polar low space orbit
			
			maxApA = Random(0.4,0.5) * @targetBody.SpaceAltitudeThreshold()
			maxPeA = (Random(0.3,0.4) * @targetBody.SpaceAltitudeThreshold()) < @targetBody.AtmosphereAltitude() ? @targetBody.AtmosphereAltitude() :  (Random(0.3,0.4) * @targetBody.SpaceAltitudeThreshold())
			maxEccentricity = 0.1
			minInclination = Random(70,85)
			maxInclination = Random(90,105)
			disableOnStateChange = true
		}
    }

	PARAMETER
	{
		name = CollectScience
		type = CollectScience

		title = Take a photo of the specified area
		biome = @scienceSubject.Biome()
		situation = @scienceSubject.Situation()
		experiment = @scienceSubject.Experiment()
		recoveryMethod = Recover

		ITERATOR
		{
			type = ScienceSubject
			scienceSubject = @/scienceSubjects
		}
	}
	
	PARAMETER
	{
		name = ReturnHome
		type = ReturnHome
		title = Recover the film canister
	}
	
	// This requirement specifies the nodes that the parts with the required experiments currently reside in. Deliberately not specifying particular parts, so any part with the experiment can be used. If all applicable parts get placed to later nodes, could lead to issues however.
	REQUIREMENT
    {
		name = Any
		type = Any

        REQUIREMENT
        {
            name = CompleteContract
            type = CompleteContract
            contractType = Corona_KH4A
            minCount = 3
            cooldownDuration = 0d
        }
    }
}
