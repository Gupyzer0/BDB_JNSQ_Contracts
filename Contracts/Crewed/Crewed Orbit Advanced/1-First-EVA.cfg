CONTRACT_TYPE
{
	name = first_EVA
	title = First EVA
	group = CrewedOrbitAdv
	agent = fai

	description = <b>Program: Advanced Crewed Orbit</b><br><br>Performing the first EVA provides valuable insight into future spacesuit, rather than flight suit, design. It also highlights future technologies that need development for EVA. Launch a spacecraft into orbit with least one crewmember aboard, perform a spacewalk while recording observations, and immediately transmit them home. Then, return the crew to Earth after at least one full orbit with a perigee above 150 km. Historically, the first spacewalk was performed from a Soviet Voskhod 2 (1965, 5.7 tons, modified Molniya) followed a few months later by a spacewalk from a U.S. Gemini capsule (1965, 3.8 tons, Gemini Titan II).

	synopsis = Perform a spacewalk during an orbital mission (with report), then return safe.

	completedMessage = A spacewalk, and then a safe return. Excellent work!

	cancellable = true
	declinable = false
	autoAccept = false
	minExpiry = 0
	maxExpiry = 0
	maxCompletions = 1
	maxSimultaneous = 1
	deadline = 0

	targetBody = HomeWorld()

	// ------------------------------------------------------------------------
	// Rewards
	// ------------------------------------------------------------------------
	prestige = Exceptional
	advanceFunds = 0
	rewardFunds = @rewardReputation * @SpacelinesContracts:KerbucksReputationRewardMultiplier
	failureFunds = @rewardFunds
	rewardScience = 2
	rewardReputation = 12
	failureReputation = @rewardReputation

	// ------------------------------------------------------------------------
	// Requirements
	// ------------------------------------------------------------------------
	REQUIREMENT
    {
        name = CompleteContract
        type = CompleteContract
        contractType = CollectCrewedScienceBasic
    }

	REQUIREMENT
	{
		name = All
		type = All
		title = Don't have any other Orbital Flight Contract Active.

		REQUIREMENT
		{
			name = AcceptContract
			type = AcceptContract
			
			contractType = OrbitalFlight1
			invertRequirement = true
		}

		REQUIREMENT
		{
			name = AcceptContract
			type = AcceptContract
			
			contractType = OrbitalFlight2
			invertRequirement = true
		}

		REQUIREMENT
		{
			name = AcceptContract
			type = AcceptContract
			
			contractType = OrbitalFlight3
			invertRequirement = true
		}
	}

	// Vessel Name
	DATA
	{
		type = string
		craft = CrewEVA
	}

	// ------------------------------------------------------------------------
	// Parameters
	// ------------------------------------------------------------------------
	PARAMETER
	{
		name = CrewEVA
		type = VesselParameterGroup
		title = First orbital EVA
		define = @/craft
		
		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			title = Launch a new vessel
			hideChildren = true
		}
		PARAMETER 
		{
			name = HasCrew
			type = HasCrew 
			minCrew = 1
			maxCrew = 3
			title = Have at least 1 crewmember but no more than 3
		}
		PARAMETER
		{
			name = EVAReportInOrbit
			type = All
			title = Reach orbit, Perform an EVA, and get the data of the EVA back to KSC
			hideChildren = true
			PARAMETER
			{
				name = OrbitEarth
				type = Orbit
				minPeA = @targetBody.AtmosphereAltitude()
				targetBody = HomeWorld()
			}
			PARAMETER
			{
				name = EVAReport
				type = CollectScience
				targetBody = HomeWorld()
				situation = InSpaceLow
				experiment = evaReport
				recoveryMethod = RecoverOrTransmit
			}
			disableOnStateChange = true // when you go inside
		}
	}

	// Return Home Safely
	PARAMETER
	{
		name = VesselParameterGroup
		type = VesselParameterGroup
		title = Return Home Safely
		vessel = @/craft

		PARAMETER
		{
			name = ReachState
			type = ReachState

			targetBody = HomeWorld()
			situation = LANDED
			situation = SPLASHED

			disableOnStateChange = false
		}
		completeInSequence = true
		disableOnStateChange = false
	}

	// Checking crew safety
	PARAMETER
	{
		name = All
		type = All
		title = safely

		PARAMETER
		{
			name = VesselNotDestroyed
			type = VesselNotDestroyed
			title = without destroying your aircraft

			vessel = @/craft
		}

		PARAMETER
		{
			name = KerbalDeaths
			type = KerbalDeaths
			title = or killing anyone

			vessel = @/craft
		}
		completeInSequence = true
		disableOnStateChange = true
	}
}