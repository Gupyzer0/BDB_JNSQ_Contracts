CONTRACT_TYPE
{
	name = first_Docking
	title = First Docking
	group = CrewedOrbitAdv
	agent = fai

	description = <b>Program: Advanced Crewed Orbit</b><br><br>Perform the first docking between two spacecraft. Historically, this was first done on March 16, 1966 with Gemini 8. Neil Armstrong and David Scott docked to an Agena target vehicle, before a stuck thruster on the Gemini spacecraft caused a near-disaster and the mission was aborted.
	synopsis = Perform the first docking of two vessels in orbit of Earth
	completedMessage = Nice Work! We have achieved hard lock!

	cancellable = true
	declinable = false
	autoAccept = false
	minExpiry = 0
	maxExpiry = 0
	maxCompletions = 1
	maxSimultaneous = 1
	deadline = 0

	targetBody = HomeWorld()

	// ------------------------------------------------------------------------
	// Rewards
	// ------------------------------------------------------------------------
	prestige = Significant //Exceptional
	advanceFunds = @rewardReputation * @SpacelinesContracts:KerbucksSignificant
	rewardFunds = @advanceFunds * @SpacelinesContracts:KerbucksRewardSignificant
	failureFunds = @advanceFunds * 1.1
	rewardScience = 0
	rewardReputation = 150
	failureReputation = @rewardReputation * 0.5 // was @rewardReputation

	// ------------------------------------------------------------------------
	// Requirements
	// ------------------------------------------------------------------------
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = Rendezvous
		title = Complete the Rendezvous contract
	}

	REQUIREMENT
	{
		name = All
		type = All
		title = Don't have any other Orbital Flight Contract Active.

		REQUIREMENT
		{
			name = AcceptContract
			type = AcceptContract
			
			contractType = OrbitalFlight1
			invertRequirement = true
		}

		REQUIREMENT
		{
			name = AcceptContract
			type = AcceptContract
			
			contractType = OrbitalFlight2
			invertRequirement = true
		}

		REQUIREMENT
		{
			name = AcceptContract
			type = AcceptContract
			
			contractType = OrbitalFlight3
			invertRequirement = true
		}
	}

	// Vessel Name
	DATA
	{
		type = string
		craft = dockingSpacecraft
	}

	// ------------------------------------------------------------------------
	// Parameters
	// ------------------------------------------------------------------------
	PARAMETER
	{
		name = VesselGroup
		type = VesselParameterGroup
		title = Dock to another spacecraft while in orbit.
		define = @/craft

		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			title = Launch a new vessel
			hideChildren = true
		}
		PARAMETER 
		{
			name = HasCrew
			type = HasCrew 
			minCrew = 1
			maxCrew = 3
			title = Have at least 1 crewmember but no more than 3
		}
		PARAMETER
		{
			name = Orbit
			type = Orbit
			minPeA = @targetBody.AtmosphereAltitude()
			title = Orbit @targetBody
			disableOnStateChange = true
			hideChildren = true
		}
		PARAMETER
		{
			name = Docking
			type = Docking
			title = Dock two spacecraft in orbit
			hideChildren = true
			completeInSequence = true
		}
	}

	// Return Home Safely
	PARAMETER
	{
		name = VesselParameterGroup
		type = VesselParameterGroup
		title = Return Home Safely
		vessel = @/craft

		PARAMETER
		{
			name = ReachState
			type = ReachState

			targetBody = HomeWorld()
			situation = LANDED
			situation = SPLASHED

			disableOnStateChange = false
		}
		completeInSequence = true
		disableOnStateChange = false
	}

	// Checking crew safety
	PARAMETER
	{
		name = All
		type = All
		title = safely

		PARAMETER
		{
			name = VesselNotDestroyed
			type = VesselNotDestroyed
			title = without destroying your aircraft

			vessel = @/craft
		}

		PARAMETER
		{
			name = KerbalDeaths
			type = KerbalDeaths
			title = or killing anyone

			vessel = @/craft
		}
		completeInSequence = true
		disableOnStateChange = true
	}
}