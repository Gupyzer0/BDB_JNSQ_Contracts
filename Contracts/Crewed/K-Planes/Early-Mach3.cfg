CONTRACT_TYPE
{
    name = Early-Mach3
	title = Reach Mach 3
	group = CrewedRecords

	description = Gene Kerman wants us to develop supersonic aircraft for use by the space program. Inigma Kerman wants to use this as an opportunity to take another step toward the development of a spaceplane, and impress Gene with another success. Therefore, Inigma is asking your organization to attempt a supersonic test flight exceeding Mach 3 by taking an airplane to an @/PrettyAltRange and exceeding @/PrettySpeed in a level, and controlled flight. Mach Kerman has informed us that this is not going to be easy as thermal effects are expected at this speed, but everyone believes achieving this milestone necessary for the development of a spaceplane which will need to fly far faster than Mach 3 to be successful.
	synopsis = Launch an airplane from the runway, fly at an @/PrettyAltRange, exceed @/PrettySpeed in level flight for 5 seconds, and then land back at KSC safely.
	notes = Mach 3 is definitely not cool. IN fact, it's the threshold of the flames of fire. The aerodynamic forces attacking your plane will be relentless, and unforgiving. Send a brave pilot who you know will keep his cool in flight.
	completedMessage = Wow! You did it! You reached Mach 2, and came back safely!\n\nInigma passed your flight data to Gene Kerman at the Kerbal Space Program, and Gene says he's very proud of your accomplishments, and that he's very glad to have you working together.

    autoAccept = false
	cancellable = true
	declinable = false
	
	targetBody = HomeWorld()

	// Can only have one active
	maxCompletions = 1
	maxSimultaneous = 1

	// Contract rewards

	prestige = Exceptional
	advanceFunds = @rewardReputation * @SpacelinesContracts:KerbucksExceptional
	rewardFunds = @advanceFunds * @SpacelinesContracts:KerbucksRewardExceptional
	failureFunds = @advanceFunds * 1.1
	rewardReputation = 25
	failureReputation = @rewardReputation * 0.5 // was @rewardReputation

    REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract

		contractType = Early-Mach2
		minCount = 1
	}

	DATA
	{
		type = string
		craft = KPlanesMach3
	}

	DATA
	{
		type = double
		AltMin = Round(@SpacelinesContracts:TroposphereLow * 1000.0)
		ScaledAltMin = Round(@/AltMin / 1000.0)
		title = Minimum altitude
	}

	DATA
	{
		type = string
		DescAltMin = " (Troposphere Low)"
		title = Minimum altitude
	}

	DATA
	{
		type = string
		PrettyAltMin = @/ScaledAltMin.ToString("#,# km")
		title = Minimum altitude
	}

	DATA
	{
		type = double
		AltMax = Round(@SpacelinesContracts:StratosphereHigh * 1000.0)
		ScaledAltMax = Round(@/AltMax / 1000.0)
		title = Maximum altitude
	}

	DATA
	{
		type = string
		DescAltMax = " (Stratosphere High)"
		title = Maximum altitude
	}

	DATA
	{
		type = string
		PrettyAltMax = @/ScaledAltMax.ToString("#,# km")
		title = Maximum altitude
	}

	DATA
	{
		type = string
		PrettyAltRange = altitude between @/PrettyAltMin@/DescAltMin and @/PrettyAltMax@/DescAltMax
		title = Range for altitude 
	}

	DATA
	{
		type = double
		Speed = Round(@SpacelinesContracts:Mach3 * 1.0)
		ScaledSpeed = Round(@/Speed / 1.0)
		title = Speed
	}

	DATA
	{
		type = string
		DescSpeed = " (Mach3)"
		title = Speed
	}

	DATA
	{
		type = string
		PrettySpeed = @/ScaledSpeed.ToString("#,# m/s")
		title = Speed
	}

	DATA
	{
		type = string
		PrettySpeedRange = speed of at least @/PrettySpeed@/DescSpeed
		title = Range for speed 
	}

//PARAMETERS FOR CONTRACT COMPLETION

//Craft definition
	PARAMETER
	{
		name = VesselParameterGroup
		type = VesselParameterGroup
		title = Your aircraft must

		define = @/craft
		dissassociateVesselsOnContractCompletion = true

		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			title = have a certified pilot

			trait = Pilot
			minCrew = 1

			disableOnStateChange = false
			hideChildren = true

		}

		PARAMETER
		{
			name = PartValidation
			type = PartValidation
			title = have wings

			category = Aero

			disableOnStateChange = false
			hideChildren = true

		}

		PARAMETER
		{
			name = All
			type = All
			title = have air breathing engines and/or rockets

			PARAMETER
			{
				name = PartValidation
				type = PartValidation
				title = not have any solid rocket engines

				NONE
				{
					MODULE
					{
						EngineType = SolidBooster
					}

				}

				disableOnStateChange = false
				hideChildren = true

			}

			disableOnStateChange = false

		}

		disableOnStateChange = false

	}

//Contract Goals
	PARAMETER
	{
		name = All
		type = All
		title = achieve a maximum airspeed of @/PrettySpeed

		PARAMETER
		{
			name = VesselParameterGroup
			type = VesselParameterGroup
			title = fly at an @/PrettyAltRange
	
			vessel = @/craft
	
			PARAMETER
			{
				name = ReachState
				type = ReachState
	
				targetBody = HomeWorld()
				situation = FLYING
				minAltitude = @/AltMin
				maxAltitude = @/AltMax
	
				disableOnStateChange = false
				hideChildren = true
				hidden = true
	
			}
	
			completeInSequence = false
			disableOnStateChange = false
			hideChildren = true
	
		}
	
		PARAMETER
		{
			name = VesselParameterGroup
			type = VesselParameterGroup
			title = fly faster than @/PrettySpeed
	
			vessel = @/craft
	
			PARAMETER
			{
				name = ReachState
				type = ReachState
	
				targetBody = HomeWorld()
				situation = FLYING
				minSpeed = @/Speed
	
				disableOnStateChange = false
				hideChildren = true
				hidden = true
	
			}
	
			completeInSequence = false
			disableOnStateChange = false
			hideChildren = true
	
		}
	
		PARAMETER
		{
			name = VesselParameterGroup
			type = VesselParameterGroup
			title = with less than 10 m/s of vertical speed
	
			vessel = @/craft
	
			PARAMETER
			{
				name = ReachState
				type = ReachState
	
				targetBody = HomeWorld()
				situation = FLYING
				minRateOfClimb = -10
				maxRateOfClimb = 10
	
				disableOnStateChange = false
				hideChildren = true
				hidden = true
	
			}
	
			completeInSequence = true
			disableOnStateChange = false
			hideChildren = true
	
		}
	
		PARAMETER
		{
			name = Duration
			type = Duration
	
			duration = 5s
			preWaitText = and hold for:
			waitingText = and hold for: 
			completionText = You did it!
	
			completeInSequence = true
			disableOnStateChange = false
	
		}
	
	
		completeInSequence = true
		disableOnStateChange = true
	
	}

//Recovery Parameter - Landing
	PARAMETER
	{
		name = Any
		type = Any
		title = and then land and stop

		PARAMETER
		{
			name = Any
			type = Any
			title = at one of the following recovery areas

			PARAMETER
			{
				name = VesselParameterGroup
				type = VesselParameterGroup
				title = the KSC Runway

				vessel = @/craft

			PARAMETER
				{
					name = ReachState
					type = ReachState

					targetBody = HomeWorld()
					biome = Runway
					situation = LANDED
					maxSpeed = 0.0

					disableOnStateChange = false
					hideChildren = true

				}

				disableOnStateChange = false
				hideChildren = true		

			}

			PARAMETER
			{
				name = VesselParameterGroup
				type = VesselParameterGroup
				title = or the Spaceplane Hangar Air Terminal

				vessel = @/craft

			PARAMETER
				{
					name = ReachState
					type = ReachState

					targetBody = HomeWorld()
					biome = SPH
					situation = LANDED
					maxSpeed = 0.0

					disableOnStateChange = false
					hideChildren = true

				}

				disableOnStateChange = false
				hideChildren = true		

			}

			disableOnStateChange = false

		}

		completeInSequence = true
		disableOnStateChange = false

	}

//Recovery Parameter - Craft & Kerbal Safety Check
	PARAMETER
	{
		name = All
		type = All
		title = safely

		PARAMETER
		{
			name = VesselNotDestroyed
			type = VesselNotDestroyed
			title = without destroying your aircraft

			vessel = @/craft

		}

		PARAMETER
		{
			name = KerbalDeaths
			type = KerbalDeaths
			title = or killing anyone

			vessel = @/craft

		}

		completeInSequence = true
		disableOnStateChange = true
	}
}