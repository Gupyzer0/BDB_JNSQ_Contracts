CONTRACT_TYPE:NEEDS[JNSQ]
{
	name = CrewedMunOrbitRepeat
	title = Crewed Mun Orbit
	group = CrewedLunar

	description = <b>Program: Crewed Mun Exploration</b><br><br>Launch a crewed spacecraft into Mun orbit for a routine mission of the specified duration and return safely to Earth.&br;&br;<b>Number of Contracts Completed: @index / 2</b>
	genericDescription = Launch a crewed spaceship into Mun orbit
	synopsis = Fly a Crewed Mun Orbital mission
	completedMessage = Crew alive and well after the mission--congratulations!

	cancellable = true
	declinable = true
	autoAccept = false
	minExpiry = 0
	maxExpiry = 0
	maxCompletions = 2
	maxSimultaneous = 1
	deadline = 0

	targetBody = Mun


	// ************ REWARDS ************
	prestige = Significant
	advanceFunds = @rewardReputation * @SpacelinesContracts:KerbucksSignificant
	rewardFunds = @advanceFunds * @SpacelinesContracts:KerbucksRewardSignificant
	failureFunds = @advanceFunds * 1.1
	rewardScience = 5
	rewardReputation = 500
	failureReputation = @rewardReputation * 0.5 // was @rewardReputation

	// ************ REQUIREMENTS ************

	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = FirstCrewedMunOrbit
		title = Complete 'First Crewed Mun Orbit' contract
	}
	
	REQUIREMENT
	{
		name = All
		type = All
		title = Don't have any other Mun Flight Contract Active.

		REQUIREMENT
        {
            name = AcceptContract
            type = AcceptContract
            contractType = MunExtendedStayCrew
            invertRequirement = true
        }
        REQUIREMENT
        {
            name = AcceptContract
            type = AcceptContract
            contractType = RepeatMunLandingCrew
            invertRequirement = true
        }
    }

	// ************ DATA BLOCKS ************

	DATA
	{
		type = List<Duration>
		durations = [ 36h, 72h ]
	}

	DATA
	{
		type = Duration
		Duration = @durations.ElementAt(@index)
		title = Duration of Mission
	}

	DATA
	{
		type = int
		startPeA = 30000
		title = First Periselene
	}

	DATA
	{
		type = int
		startApA = 75000 + Round(Random(0, 225000), 25000)
		title = First Aposelene
	}
	
	DATA
	{
		type = int
		index = $HSFOrbitalMunGenRepeatable_Count + 0
	}

	BEHAVIOUR
	{
		name = IncrementTheCount
		type = Expression
		
		CONTRACT_COMPLETED_SUCCESS
		{
			HSFOrbitalMunGenRepeatable_Count = $HSFOrbitalMunGenRepeatable_Count + 1
		}
	}

	// ************ PARAMETERS ************

	PARAMETER
	{
		name = VesselGroup
		type = VesselParameterGroup
		title = Crewed Orbit of @targetBody

		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			title = Launch a New Vessel
			hideChildren = true
		}

		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			minCrew = 1
			title = Have at least 1 crewmember on board
			hideChildren = true
		}

		PARAMETER
		{
			name = OrbitWrapper
			title = Stay in specified orbit for the duration
			type = All
			disableOnStateChange = true
			completeInSequence = true

			PARAMETER
			{
				name = MunOrbit
				type = Orbit
				situation = ORBITING
				minPeA = @/startPeA
				maxApA = @/startApA
				targetBody = Mun
				title = Reach Orbit of the Mun within the provided parameters
			}

			PARAMETER
			{
				name = Duration
				type = Duration
				duration = @/Duration
				preWaitText = Reach specified orbit
				waitingText = Orbiting...
				completionText = Orbits are complete, you may return to Earth when ready
			}
		}
		PARAMETER
        {
            name = ReturnHome
            type = ReturnHome
            title = Recover the spaceship and its crew intact
        }
	}
}