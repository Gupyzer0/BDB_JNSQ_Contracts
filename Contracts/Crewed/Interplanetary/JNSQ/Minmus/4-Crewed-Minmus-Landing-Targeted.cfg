CONTRACT_TYPE:NEEDS[JNSQ]
{
	name = RepeatMinmusLandingCrew
	title = Crewed Targeted Minmus Landing
	group = CrewedLunar

	description = <b>Program: Crewed Minmus Exploration</b><br><br>Design and launch a spacecraft with at least one crew member to land at a specific location on Minmus. Explore the area for at least @/LandDur and then return safely to Earth.&br;&br;<b>Number of Contracts Completed: @index / @maxCompletions</b>
	genericDescription = Launch a crewed single-person spacecraft and land it on a specific Minmus biome. Explore the area for the specified amount of time and then return safely to Earth.
	synopsis = Land a crew on a specific biome on Minmus and return safely to Earth
	completedMessage = Congratulations, the crew has returned safely from their mission on Minmus!

	cancellable = true
	declinable = true
	autoAccept = false
	minExpiry = 0
	maxExpiry = 0
	maxCompletions = 2
	maxSimultaneous = 1
	deadline = 0

	targetBody = Minmus

	// ************ REWARDS ************
    prestige = Exceptional
	advanceFunds = @rewardReputation * @SpacelinesContracts:KerbucksExceptional
	rewardFunds = @advanceFunds * @SpacelinesContracts:KerbucksRewardExceptional
	failureFunds = @advanceFunds * 1.1
	rewardScience = 15
	rewardReputation = 1000+(250 * @/index)
	failureReputation = @rewardReputation * 0.5 // was @rewardReputation
	// ************ REQUIREMENTS ************

	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = first_MinmusLandingCrewed
	}

    REQUIREMENT
	{
		name = All
		type = All
		title = Don't have any other Minmus Flight Contract Active.

		REQUIREMENT
        {
            name = AcceptContract
            type = AcceptContract
            contractType = CrewedMinmusOrbitRepeat
            invertRequirement = true
        }
        REQUIREMENT
        {
            name = AcceptContract
            type = AcceptContract
            contractType = MinmusExtendedStayCrew
            invertRequirement = true
        }
    }

	DATA
	{
		type = double
		pi = 3.14159265358979
	}

	DATA
	{
		type = double
		maxLat = 45
	}

	DATA
	{
		type = double
		lat = 90 - 180 / @/pi * Acos(Sin(@/pi / 180 * @/maxLat) * (1 - 2 * Random()))
		long = 180 * (1 - 2 * Random())
	}

	DATA
	{
		type = double
		latMag = Max(@/lat, -@/lat)
		longMag = Max(@/long, -@/long)
	}

	DATA
	{
		type = string
		NorthSouthString = @/lat >= 0 ? "째 North" : "째 South"
		EastWestString = @/long >= 0 ? "째 East" : "째 West"
		hidden = true
	}
	
	DATA
	{
		type = int
		index = $RepeatMinmusLandingCrew_Count + 0
	}

	DATA
	{
		type = List<Duration>
		specifiedTime = [ 12h, 24h ]
	}

	DATA
	{
		type = Duration
		LandDur = @specifiedTime.ElementAt(@index)
		title = Duration
	}

	BEHAVIOUR
	{
		name = IncrementTheCount
		type = Expression
		
		CONTRACT_COMPLETED_SUCCESS
		{
			RepeatMinmusLandingCrew_Count = $RepeatMinmusLandingCrew_Count + 1
		}
	}

	// Vessel Name
	DATA
	{
		type = string
		craft = MinmusLandingCrew-Targeted
	}

	// ************ PARAMETERS ************
	
	PARAMETER
	{
		name = vesselGroup
		type = VesselParameterGroup
		title = Crewed Minmus landing
		define = @/craft
		dissassociateVesselsOnContractCompletion = true
		
		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			title = Launch a new vessel
			hideChildren = true
		}

		PARAMETER
		{
			name = TwoCrew
			type = HasCrew
			minCrew = 1
			title = Have at least 1 crewmember on board
			hideChildren = true
		}

		PARAMETER
		{
			name = LandCrewed
			type = All
			title = Land the crewed lander
			disableOnStateChange = true
			
			PARAMETER
			{
				name = TwoCrew
				type = HasCrew
				minCrew = 1
				title = Have at least 1 crewmember on board
				hideChildren = true
			}

			PARAMETER
			{
				name = OrbitWrapper
				title = Stay on Minmus for the specified duration
				type = All
				disableOnStateChange = true
				completeInSequence = true

				PARAMETER
				{
					name = ReachState
					type = ReachState
					targetBody = Minmus
					situation = LANDED
				}
				
				PARAMETER
				{
					name = Duration
					type = Duration
					duration = @/LandDur
					preWaitText = Land on Minmus.
					waitingText = Exploring...
					completionText = Exploration completed, you may return to Earth when ready.
				}
			}
			
			PARAMETER
			{
				name = Landing Site
				type = VisitWaypoint
				index = 0
				distance = 1000.0
				title = Land within 1km of this waypoint
				showMessages = true
				disableOnStateChange = true
				hideChildren = true
			}
		}
	}

	// Return Home Safely
	PARAMETER
	{
		name = VesselParameterGroup
		type = VesselParameterGroup
		title = Return Home Safely
		vessel = @/craft

		PARAMETER
		{
			name = ReachState
			type = ReachState

			targetBody = HomeWorld()
			situation = LANDED
			situation = SPLASHED

			disableOnStateChange = false
		}
		completeInSequence = true
		disableOnStateChange = false
	}

	// Checking crew safety
	PARAMETER
	{
		name = All
		type = All
		title = safely

		PARAMETER
		{
			name = VesselNotDestroyed
			type = VesselNotDestroyed
			title = without destroying your aircraft

			vessel = @/craft
		}

		PARAMETER
		{
			name = KerbalDeaths
			type = KerbalDeaths
			title = or killing anyone

			vessel = @/craft
		}
		completeInSequence = true
		disableOnStateChange = true
	}
	
	// Waypoint Generator
	BEHAVIOUR
	{
		name = WaypointGenerator
		type = WaypointGenerator

		WAYPOINT
		{
			name = Site Alpha
			hidden = False
			targetBody = Minmus
			icon = marker
			altitude = 0.0
			latitude = @/lat
			longitude = @/long
		}
	}	
}