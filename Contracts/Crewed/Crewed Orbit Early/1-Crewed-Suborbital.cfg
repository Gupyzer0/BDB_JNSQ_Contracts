CONTRACT_TYPE
{
	name = CrewedSuborbital
	title = Suborbital Flight (Crewed)
	group = CrewedOrbit

	description = <b>Program: Crewed Orbit</b><br><br>Crewed suborbital flights are used as a safer prelude to an orbital mission, for research, or to set non-orbital altitude records. Send any number of crew above @VesselGroup/ReachAlt/minAltitude meters to satisfy the requirements of this mission. Historical missions used the Mercury capsule (1961, Mercury-Redstone), the X-15 (1963, B-52), and SpaceShipOne (2004, White Knight).
	genericDescription = Launch a crewed spacecraft or spaceplane with at least one person aboard above the required height and return safely home.
	synopsis = Send a crewed vessel on a suborbital flight
	completedMessage = Congratulations! The crew has returned safely and we put another person in space.

	cancellable = true
	declinable = true
	autoAccept = false
	minExpiry = 0
	maxExpiry = 0
	maxCompletions = 3
	maxSimultaneous = 1
	deadline = 0

	targetBody = HomeWorld()

	// ************ REWARDS ************
	prestige = Significant //Exceptional
	advanceFunds = @rewardReputation * @SpacelinesContracts:KerbucksSignificant
	rewardFunds = @advanceFunds * @SpacelinesContracts:KerbucksRewardSignificant
	failureFunds = @advanceFunds * 1.1
	rewardScience = 5
	rewardReputation = 60
	failureReputation = @rewardReputation * 0.5 // was @rewardReputation

	// ************ REQUIREMENTS ************

    REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = LightBiosatellite
		title = Completed the First Biosatellite Contract
	}

	// ************ PARAMETERS ************

	// Vessel Name
	DATA
	{
		type = string
		craft = EarlyCrewedOrbit_Suborbital
	}
	
	PARAMETER
	{
		name = VesselGroup
		type = VesselParameterGroup
		title = Suborbital flight
		define = @/craft
		dissassociateVesselsOnContractCompletion = true

		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			title = Launch a new vessel
			hideChildren = true
		}
		PARAMETER
		{
			name = OneCrew
			type = HasCrew
			minCrew = 1
			maxCrew = 1
			title = Have 1 crewmember on board
			hideChildren = true
			disableOnStateChange = true
		}
		PARAMETER
		{
			name = ReachAlt
			type = ReachState
			minAltitude = @/targetBody.AtmosphereAltitude()
			disableOnStateChange = true
			title = Reach @minAltitude meters
			hideChildren = true
		}
	}

	// Return Home Safely
	PARAMETER
	{
		name = VesselParameterGroup
		type = VesselParameterGroup
		title = Return Home Safely
		vessel = @/craft

		PARAMETER
		{
			name = ReachState
			type = ReachState

			targetBody = HomeWorld()
			situation = LANDED
			situation = SPLASHED

			disableOnStateChange = false
		}
		completeInSequence = true
		disableOnStateChange = false
	}

	// Checking crew safety
	PARAMETER
	{
		name = All
		type = All
		title = safely

		PARAMETER
		{
			name = VesselNotDestroyed
			type = VesselNotDestroyed
			title = without destroying your aircraft

			vessel = @/craft
		}

		PARAMETER
		{
			name = KerbalDeaths
			type = KerbalDeaths
			title = or killing anyone

			vessel = @/craft
		}
		completeInSequence = true
		disableOnStateChange = true
	}
}