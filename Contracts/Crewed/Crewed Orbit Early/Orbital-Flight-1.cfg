CONTRACT_TYPE
{
	name = OrbitalFlight1
	title = Orbital Flight (One Crew)
	group = CrewedOrbit

	description = <b>Program: Crewed Orbit</b><br><br>Single-person orbital spacecraft are fairly rare in history but serve an important role in proving future technologies, with Mercury (1962, 1.4 tons, Atlas LV-3B) and Vostok (1961, 4.7 tons, Vostok-K) being the only examples. Design, build, and launch one that remains for @/NoOfOrbits orbits and return the crew safely back to Earth.<b><br><br><color=yellow>NOTE: You can not complete this contract and the Orbital Flight with Maneuvers and 2+ Crew contract at the same time. Attempting to complete both in same flight will automatically fail this one.</color></b>&br;&br;<b>Number of Contracts Completed: @index / unlimited</b>
	genericDescription = Launch a crewed spacecraft carrying one person into orbit for a routine mission for the specified duration and return safely home.
	synopsis = Fly a single-person LEO Orbital mission.
	completedMessage = Crew alive and well after the mission--congratulations!

	cancellable = true
	declinable = true
	autoAccept = false
	minExpiry = 5
	maxExpiry = 30
	maxCompletions = 0
	maxSimultaneous = 1
	deadline = 180

	targetBody = HomeWorld()

	// ************ REWARDS ************
	prestige = Trivial //Exceptional
	advanceFunds = @rewardReputation * @SpacelinesContracts:KerbucksTrivial
	rewardFunds = @advanceFunds * @SpacelinesContracts:KerbucksRewardTrivial
	failureFunds = @advanceFunds * 1.1
	rewardScience = 0
	rewardReputation = 150
	failureReputation = @rewardReputation * 0.5 // was @rewardReputation

	// ************ REQUIREMENTS ************

	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = first_OrbitCrewed
	}

	REQUIREMENT
	{
		name = All
		type = All
		title = Don't have any other Orbital Flight Contracts Done.

		REQUIREMENT
		{
			name = CompleteContract
			type = CompleteContract
			
			contractType = OrbitalFlight2
			invertRequirement = true
		}
		REQUIREMENT
		{
			name = CompleteContract
			type = CompleteContract
			
			contractType = OrbitalFlight3
			invertRequirement = true
		}
	}
	
	DATA
	{
		type = int
		NoOfOrbits = [3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30].Random()
		title = How many orbits?
	}
	DATA
	{
		type = Double
		DurDouble = 2700 * @NoOfOrbits //2700 seconds are 45 minutes, roughly an orbit in LEO regime in JNSQ
		title = How much time in orbit?
	}
	DATA
	{
		type = Duration
		title = Duration
		Duration = @DurDouble
		title = Total Duration
	}
	
	DATA
	{
		type = int
		index = $OrbitalFlight1_Count + 0
	}

	BEHAVIOUR
	{
		name = IncrementTheCount
		type = Expression
		
		CONTRACT_COMPLETED_SUCCESS
		{
			OrbitalFlight1_Count = $OrbitalFlight1_Count + 1
		}
	}

	// ************ PARAMETERS ************
	
	PARAMETER
	{
		name = VesselGroup
		type = VesselParameterGroup
		title = Crewed orbital
	
		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			title = Launch a new vessel
			hideChildren = true
		}

		PARAMETER
		{
			name = OneCrew
			type = HasCrew
			minCrew = 1
			maxCrew = 1
			title = Have 1 crewmember on board
			hideChildren = true
			disableOnStateChange = true
		}

		PARAMETER
		{
			name = OrbitWrapper
			title = Stay in specified orbit for the duration
			type = All
			disableOnStateChange = true
			completeInSequence = true

			PARAMETER
			{
				name = Orbit
				type = Orbit
				minAltitude = @/targetBody.AtmosphereAltitude() + 5000
				maxAltitude = 350000
				targetBody = HomeWorld()
			}
			
			PARAMETER
			{
				name = Duration
				type = Duration
				duration = @/Duration
				preWaitText = Reach specified orbit
				waitingText = Orbiting...
				completionText = Orbits completed, you may fire retros when ready.
			}
		}

		PARAMETER
        {
            name = ReturnHome
            type = ReturnHome
            title = Recover the spaceship and its crew intact
        }
	}
}