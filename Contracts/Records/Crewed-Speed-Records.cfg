CONTRACT_TYPE
{
	name = recordCrewedSpeed
	group = CrewedRecords
	
	title = Crewed Speed Record of @crewedTargetSpeed m/s.
	description = We want you to set a new crewed speed record! Fly/rocket above @crewedTargetSpeed m/s with crew aboard.
	synopsis = Set a crewed speed record of @crewedTargetSpeed m/s.
	genericTitle = Crewed Speed Record
	genericDescription = We want you to set a new crewed speed record!
	completedMessage = Congratulations! You've set a new crewed speed record!
	
	autoAccept = true
	cancellable = true
	declinable = false
	
	prestige = Trivial

	targetBody = HomeWorld()

	// Can only have one active
	maxSimultaneous = 1

	// Contract rewards
	rewardFunds = 2500
	rewardReputation = 3.0 + Round( Pow(@crewedTargetSpeed, 1.1) * 0.005 )

	DATA
	{
		type = List<float>
		crewedSpeeds = [ 450, 600, 900, 1200, 1500, 2000, 2500, 3000, 3500, 3800, 4000, 4500 ]
	}

	// Break this into two steps to work around ContractConfigurator#260
	DATA
	{
		type = float
		crewedSpeedIndex = CrewedSpeedIndex
	}

	DATA
	{
		type = float
		crewedTargetSpeed = @crewedSpeeds.ElementAt(@crewedSpeedIndex)
	}

	REQUIREMENT
	{
		type = Expression
		title = Crewed Speed
		expression = @/crewedSpeedIndex < @/crewedSpeeds.Count()
	}

	BEHAVIOUR
	{
		name = IncrementIndex
		type = Expression

		CONTRACT_COMPLETED_SUCCESS
		{
			CrewedSpeedIndex = CrewedSpeedIndex + 1
		}
	}

	PARAMETER
	{
		name = VesselGroup
		type = VesselParameterGroup
		title = Reach a speed of @/crewedTargetSpeed m/s with a crewed vessel

		PARAMETER
		{
			name = ReachState
			type = ReachState
			minSpeed = @/crewedTargetSpeed
		}

		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			minCrew = 1
			crewOnly = true
		}
	}
}