CONTRACT_TYPE
{
	name = recordUncrewedSpeed
	group = Records

	title = Uncrewed Speed Record of @uncrewedTargetSpeed m/s.
	genericTitle = Uncrewed Speed Record
	description = We want you to set a new uncrewed speed record! Reach @uncrewedTargetSpeed m/s.
	genericDescription = We want you to set a new uncrewed speed record!
	synopsis = Set an uncrewed speed record of @uncrewedTargetSpeed m/s.
	completedMessage = Congratulations! You've set a new uncrewed speed record!

	autoAccept = true
	cancellable = true
	declinable = false
	
	prestige = Trivial

	targetBody = HomeWorld()

	// Can only have one active
	maxSimultaneous = 1

	// Contract rewards
	rewardFunds = @uncrewedTargetSpeed * 2
	rewardReputation = 10

	DATA
	{
		type = List<float>

		soundingSpeeds = [ 1000, 1500, 2000, 2500]
	}

	// Break this into two steps to work around ContractConfigurator#260
	DATA
	{
		type = float

		soundingSpeedIndex = SoundingSpeedIndex
	}

	DATA
	{
		type = float

		uncrewedTargetSpeed = @soundingSpeeds.ElementAt(@soundingSpeedIndex)
	}

	REQUIREMENT
	{
		type = Expression
		title = Speed

		expression = @/soundingSpeedIndex < @/soundingSpeeds.Count()
	}

	BEHAVIOUR
	{
		name = IncrementIndex
		type = Expression

		CONTRACT_COMPLETED_SUCCESS
		{
			SoundingSpeedIndex = SoundingSpeedIndex + 1
		}
	}

	PARAMETER
	{
		name = VesselGroup
		type = VesselParameterGroup
		title = Reach a speed of @/uncrewedTargetSpeed m/s

		PARAMETER 
		{
			name = HasCrew
			type = HasCrew 
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
		}
		PARAMETER
		{
			name = ReachState
			type = ReachState

			minSpeed = @/uncrewedTargetSpeed
		}
	}
}