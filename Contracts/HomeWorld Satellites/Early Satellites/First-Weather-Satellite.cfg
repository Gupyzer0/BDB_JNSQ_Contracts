CONTRACT_TYPE
{
	name = FirstWeatherSat
	title = First Weather Satellite  // Vanguard 2
	group = EarlySatellites
	
	description = <b>Program: Early Satellites</b><br><br>The Atmospheric Analysis Satellite that we launched was a good first step to understanding how the upper atmosphere affects the weather. The optical scanner experiment was designed to obtain cloud cover data. The satellite motion and rotation make the photocells scan @targetBody in successive "lines" .&br;&br;Launch our first official weather satellite into orbit.

	synopsis = Launch the first weather satellite

	completedMessage = Success! The images provided from this satellite have proven that weather satellites can be extremely effective in helping meteorologists predict the weather.

	sortKey = 511

	cancellable = false
	declinable = false
	autoAccept = false
	minExpiry = 0
	maxExpiry = 0
	maxCompletions = 1
	maxSimultaneous = 1
	deadline = 0

	targetBody = HomeWorld()

	// ************ REWARDS ************
	prestige = Significant       // 1.0x
	rewardFunds = @rewardReputation * @SpacelinesContracts:KerbucksSignificant
	rewardScience = 0
	rewardReputation = 75
	failureReputation = 0 // was @rewardReputation

	// ************ REQUIREMENTS ************

    REQUIREMENT
	{
		name = Any
		type = Any
	
		REQUIREMENT
		{
			name = AcceptContractOrbit
			type = AcceptContract
			contractType = FirstSatellite
		}
		REQUIREMENT
		{
			name = CompleteContract
			type = CompleteContract
			contractType = FirstSatellite
		}
	}

	PARAMETER
	{
		name = FirstWeatherSat
		type = VesselParameterGroup
		title = First weather satellite
		define = FirstWeatherSat

		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			title = Launch a new vessel
			hideChildren = true
		}
		PARAMETER
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		
		PARAMETER
		{
			name = Orbit
			type = Orbit

			minAltitude = @targetBody.AtmosphereAltitude()
			title = Reach orbit
			disableOnStateChange = true
			
			PARAMETER
			{
				name = Duration
				type = Duration

				duration = 45s

				preWaitText = Check for stable orbit
				waitingText = Checking for stable orbit
				completionText = Stable orbit: Confirmed
			}
		}
        
        PARAMETER
        {
            name = CollectScienceA
            type = CollectScience

            title = Transmit Photometer data from orbit
            location = Space
            recoveryMethod = Transmit
            experiment = [bd_Photometer]
            disableOnStateChange = true
        }
	}
}