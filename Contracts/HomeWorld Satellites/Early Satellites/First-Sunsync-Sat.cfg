CONTRACT_TYPE
{
	name = FirstSunSyncSat //SAMOS 2?
	title = First Sun-Synchronous Orbit Satellite
	group = EarlySatellites
	
	description = A sun-synchronous orbit is a geocentric orbit that combines altitude and inclination in such a way that the satellite passes over any given point of the planet's surface at the same local solar time. Such an orbit can place a satellite in constant sunlight and is useful for imaging, spy, and weather satellites.&br;&br;Place a satellite into a sun-synchronous orbit. Note that sun-synchronous orbits are often slightly retrograde, as is this orbit. You'll need to fly northwest from the launch pad and it will take more delta-v than a normal polar orbit.&br;&br;You can use an online orbit calculator to determine what kind of orbit will meet the eccentricity requirement, such as the one available from rocketreference.com

	synopsis = Launch a satellite into a sun-synchronous orbit

	completedMessage = Success! True sun-synchronous orbits are not possible in KSP due to the equatorial bulge not being present. However, this is similar to what these orbits are.

	sortKey = 405

	cancellable = false
	declinable = false
	autoAccept = false
	minExpiry = 0
	maxExpiry = 0
	maxCompletions = 1
	maxSimultaneous = 1
	deadline = 0

	targetBody = HomeWorld()

	// ************ REWARDS ************
	prestige = Significant       // 1.0x
	rewardFunds = @rewardReputation * @SpacelinesContracts:KerbucksSignificant
	rewardScience = 0
	rewardReputation = 60
	failureReputation = 0 // was @rewardReputation

	// ************ REQUIREMENTS ************

	REQUIREMENT
    {
        name = CompleteContract
        type = CompleteContract
        contractType = FirstSatellite
        minCount = 1
        cooldownDuration = 0d
    }

	PARAMETER
	{
		name = VesselGroup
		type = VesselParameterGroup
		title = Sun-synchronous satellite
		define = SunSyncSatellite

		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			title = Launch a new vessel
			hideChildren = true
		}
		PARAMETER
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}

		PARAMETER
		{
			name = ReachOrbit
			type = Orbit
			title = Reach the correct orbit within the parameters. Note: This orbit is slightly retrograde.
			minInclination = 95
			maxInclination = 99
			minEccentricity = 0.02
			maxEccentricity = 0.04
			minPeA = @targetBody.AtmosphereAltitude()
			
			PARAMETER
			{
				name = Duration
				type = Duration

				duration = 2m

				preWaitText = Check for stable orbit
				waitingText = Checking for stable orbit
				completionText = Stable orbit: Confirmed
			}
		}
	}
}

