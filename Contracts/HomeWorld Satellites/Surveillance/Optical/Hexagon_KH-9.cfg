CONTRACT_TYPE
{
    name = Hexagon_KH9
    group = HexagonProgram
	title = Hexagon KH-9

	description = The KH-9 (Keyhole-9), also known as Hexagon or unofficially as "Big Bird", is a large reconnaissance satellite to replace the earlier KH-4B Corona satellites. In contrast to earlier models, it's not based on the Agena stage, but on a new maneuverable bus called SCS (Satellite Control Section). It features four return capsules for a much increased lifetime and a mapping Camera System (MCS) mounted on the forward end with an own smaller Mk.5 return capsule.

    synopsis = <color=yellow>Launch a KH-9 Gambit surveillance satellite into space around @targetBody and perform photo surveillance of the specified areas.</color>
    completedMessage = Mission Success!.
  
    agent = nro
	cancellable = true
	declinable = true
	autoAccept = false
	minExpiry = 0
	maxExpiry = 0
	maxCompletions = 0
	maxSimultaneous = 1
	deadline = 90

	targetBody = HomeWorld()
	
	// ************ REWARDS ************
	prestige = Trivial  // Significant //Exceptional
	advanceFunds = @rewardReputation * @SpacelinesContracts:KerbucksSignificant
	rewardFunds = @advanceFunds * @SpacelinesContracts:KerbucksRewardSignificant
	failureFunds = @advanceFunds * 1.1
	rewardScience = 0
	rewardReputation = 100
	failureReputation = 0 // was @rewardReputation

	// ************ REQUIREMENTS ************

	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = Gambit3_KH8
		minCount = 1
		cooldownDuration = 0d
	}

	BEHAVIOUR
	{
		name = OrbitGenerator
		type = OrbitGenerator

		RANDOM_ORBIT
		{
			type = SYNCHRONOUS
			altitudeFactor = 0.1
			inclinationFactor = 1.0
			eccentricity = 0.17
			deviationWindow = 0.5
		}
	}
	
	PARAMETER
    {
        name = Hexagon Surveillance Satellite
        type = VesselParameterGroup
        title = Launch a new Hexagon surveillance satellite
		
		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			title = The satellite must be a new vessel
		}
		
		PARAMETER
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
		}
        
		// Required Parts ---------------------------------
		PARAMETER
		{
			type = PartValidation
			part = bluedog_Hexagon_ServiceModule
			disableOnStateChange = True
		}
        PARAMETER
		{
			type = PartValidation
			part = bluedog_Hexagon_Camera
			disableOnStateChange = True
		}
        PARAMETER
		{
			type = PartValidation
			part = bluedog_Hexagon_Mk8_Capsule //4
            minCount = 4
			disableOnStateChange = True
		}
        PARAMETER
		{
			type = PartValidation
			part = bluedog_Corona_Pod
			disableOnStateChange = True
		}
		// /Required Parts ---------------------------------

		PARAMETER
		{
			name = OrbitSequence
			type = Sequence
			title = Collect imagery from orbit

			// Orbit
			PARAMETER
			{
				name = ReachSpecificOrbit
				type = ReachSpecificOrbit

				displayNotes = true
				index = 0
				deviationWindow = 0.5
				disableOnStateChange = True
			}

			PARAMETER
			{
				name = Duration
				type = Duration

				duration = 48h 

				preWaitText = Achieve desired orbit
				waitingText = Collect imagery
				completionText = Imagery collection complete
			}
		}
    }

	PARAMETER
	{
		name = CollectScienceA
		type = CollectScience

		title = Take a photo of the specified area
		biome = [ AridLowlands, AridMidlands, AridHighlands, AridMountains].Random()
		situation = InSpaceLow
		experiment = Photos4
		recoveryMethod = Recover
	}

	PARAMETER
	{
		name = CollectScienceB
		type = CollectScience

		title = Take a photo of the specified area
		biome = [ Lowlands, Midlands, Highlands, Mountains, IceCaps ].Random()
		situation = InSpaceLow
		experiment = Photos4
		recoveryMethod = Recover
	}

	PARAMETER
	{
		name = CollectScienceC
		type = CollectScience

		title = Take a photo of the specified area
		biome = [ TriangulusSea, NorthernSea, Sub-ArcticSea, EasternSea, WesternSea, ForemansSea].Random()
		situation = InSpaceLow
		experiment = Photos4
		recoveryMethod = Recover
	}

	PARAMETER
	{
		name = CollectScienceD
		type = CollectScience

		title = Take a photo of the specified area
		biome = [ ArcticSea, KrenwichSea, InlandWater, GreatLake].Random()
		situation = InSpaceLow
		experiment = Photos4
		recoveryMethod = Recover
	}
}
