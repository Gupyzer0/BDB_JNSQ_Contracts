CONTRACT_TYPE
{
    name = PanoramicOpticalSurveillanceImagery
    group = Surveillance
	title = Panoramic Optical Surveillance Imagery

	description = <b>Optical Surveillance Program</b><br><br> With orbital imagery now a proven capability, send up a follow-on early-generation imagery satellite for a longer duration in orbit. This will allow the collection of far more data with repeat passes over the same points on the surface. <b><color="yellow">Make sure your craft contains an Improved Film Camera, and a system to return the film canister for processing. Collection of all available science will require multiple launches due to film storage limitations onboard the vehicle.</color></b><br><br>Historical example: CORONA/Keyhole-4 (Thor-Agena-B)
	
    synopsis = Launch dedicated imagery satellites for longer missions.

    completedMessage = Mission Success!.

    
	cancellable = true
	declinable = true
	autoAccept = false
	minExpiry = 0
	maxExpiry = 0
	maxCompletions = 40
	maxSimultaneous = 1
	deadline = 90

	targetBody = HomeWorld()
	
	// ------------------------------------------------------------------------
	// Rewards
	// ------------------------------------------------------------------------
	prestige = Significant
	advanceFunds = 0
	rewardFunds = @rewardReputation * @SpacelinesContracts:KerbucksReputationRewardMultiplier
	failureFunds = @rewardFunds
	rewardScience = 0
	rewardReputation = 4
	failureReputation = @rewardReputation

	// ------------------------------------------------------------------------
	// Requirements
	// ------------------------------------------------------------------------

	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = FirstOpticalSurveillanceSatellite
		minCount = 1
		cooldownDuration = 0d
	}

	REQUIREMENT
    {
        name = Any
		type = Any
		invertRequirement = true
		
		REQUIREMENT
        {
            name = CompleteContract
            type = CompleteContract
            contractType = ImprovedOpticalSurveillanceImagery
            minCount = 1
            cooldownDuration = 0d
        }
    }
	
	// Vessel Name
	DATA
	{
		type = string
		craft = PanoramicOpticalSurveillanceSatellite
	}
	
	// Parameters
	PARAMETER
    {
        name = ReconSatellite2
        type = VesselParameterGroup
        title = Launch a new optical surveillance satellite
		define = @/craft
		dissassociateVesselsOnContractCompletion = true
		
		PARAMETER
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
		}

        // Required Parts ---------------------------------
		PARAMETER
		{
			name = PartValidation
			type = PartValidation
			title = Carry planetary photography with dual panoramic camera experiment
			
			VALIDATE
			{
				MODULE
				{
					name = Experiment
					experimentID = Spacelines_Photos2
				}
			}
		}
		// /Required Parts ---------------------------------
		
		PARAMETER
		{
			name = OrbitSequence
			type = Sequence
			title = Collect imagery from orbit

			PARAMETER
			{
				name = HasPower
				type = HasResource
				resource = ElectricCharge
				minQuantity = 1.0
				title = Craft must have Electric Charge for 24 hours
				hideChildren = true
			}

			// Orbit
			PARAMETER
			{
				type = Orbit
				maxApA = 200000
				minInclination = 70
				maxInclination = 100
				maxEccentricity = 0.035
				disableOnStateChange = true
				title = Orbit requirements
			}

			PARAMETER
			{
				name = Duration
				type = Duration

				duration = 24h 

				preWaitText = Achieve desired orbit
				waitingText = Collect imagery
				completionText = Imagery collection complete
			}

			PARAMETER
			{
				name = HasPower
				type = HasResource
				resource = ElectricCharge
				minQuantity = 1.0
				title = Craft must have Electric Charge for 24 hours
				hideChildren = true
			}
		}
    }

	// Return Home Safely
	PARAMETER
	{
		name = VesselParameterGroup
		type = VesselParameterGroup
		title = Recover the film canister
		vessel = @/craft

		PARAMETER
		{
			name = ReachState
			type = ReachState

			targetBody = HomeWorld()
			situation = LANDED
			situation = SPLASHED

			disableOnStateChange = false
		}
		completeInSequence = true
		disableOnStateChange = false
	}

	// Intact
	PARAMETER
	{
		name = All
		type = All
		title = Intact

		PARAMETER
		{
			name = VesselNotDestroyed
			type = VesselNotDestroyed
			title = without destroying your aircraft

			vessel = @/craft
		}
		disableOnStateChange = true
	}
}
