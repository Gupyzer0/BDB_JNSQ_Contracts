CONTRACT_TYPE
{
    name = FirstOpticalSurveillanceSatellite
    group = Surveillance
	title = First Optical Surveillance Satellite

	description = <b>Optical Surveillance Program</b><br><br> Taking photographic images from space, with a powerful enough lens, can provide highly detailed information about many things. When used for intelligence purposes, an eye in the sky is an invaluable tool for gathering information about geopolitical rivals. These types of satellites also have numerous peaceful purposes, including crop monitoring, observing deforestation, and providing indicators for areas requiring humanitarian aid. <b><color="yellow">Make sure your craft contains a Film Camera (KH-1 camera), and a system to return the film for processing. Collection of all available science will require multiple launches due to film storage limitations onboard the vehicle.</color></b><br><br>Real life examples: Discoverer/Keyhole-1 (Thor-Agena)

    synopsis = Launch the first dedicated imagery satellite.
    completedMessage = Mission Success!.

    
	cancellable = true
	declinable = true
	autoAccept = false
	minExpiry = 0
	maxExpiry = 0
	maxCompletions = 1
	maxSimultaneous = 1
	deadline = 90

	targetBody = HomeWorld()
	
	// ------------------------------------------------------------------------
	// Rewards
	// ------------------------------------------------------------------------
	prestige = Trivial  // Significant //Exceptional
	advanceFunds = @rewardReputation * @SpacelinesContracts:KerbucksTrivial
	rewardFunds = @advanceFunds * @SpacelinesContracts:KerbucksRewardTrivial
	failureFunds = @advanceFunds * 1.1
	rewardScience = 0
	rewardReputation = 25
	failureReputation = 0 // was @rewardReputation

	// ------------------------------------------------------------------------
	// Requirements
	// ------------------------------------------------------------------------

	// Must have flown polar|sunsync sat contract
	REQUIREMENT
    {
        name = Any
		type = Any
		
		REQUIREMENT
		{
			name = CompleteContract
			type = CompleteContract

			contractType = FirstPolarSat
			minCount =1
			maxCount =1
			cooldownDuration = 0d
		}

		REQUIREMENT
		{
			name = CompleteContract
			type = CompleteContract

			contractType = FirstSunSyncSat
			minCount =1
			maxCount =1
			cooldownDuration = 0d
		}
	}

	// Vessel Name
	DATA
	{
		type = string
		craft = firstOpticalSurveillanceSatellite
	}
	
	// Parameters
	PARAMETER
    {
        name = ReconSatellite1
        type = VesselParameterGroup
        title = Launch a new optical recon satellite
		define = @/craft
		dissassociateVesselsOnContractCompletion = true
		
		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			title = The satellite must be a new vessel
		}
		
		PARAMETER
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
		}

		// Required Parts ---------------------------------
		PARAMETER
		{
			name = PartValidation
			type = PartValidation
			title = Carry a planetary photography with panoramic camera experiment
			
			VALIDATE
			{
				MODULE
				{
					name = Experiment
					experimentID = Spacelines_Photos1
				}
			}
		}
		// /Required Parts ---------------------------------

		PARAMETER
		{
			name = OrbitSequence
			type = Sequence
			title = Collect imagery from orbit

			// Orbit
			PARAMETER
			{
				type = Orbit
				maxApA = 200000
				minInclination = 70
				maxInclination = 100
				disableOnStateChange = true
				title = Orbit requirements
			}

			PARAMETER
			{
				name = Duration
				type = Duration

				duration = 24h

				preWaitText = Achieve desired orbit
				waitingText = Collect imagery
				completionText = Imagery collection complete
			}

			PARAMETER
			{
				name = HasPower
				type = HasResource
				resource = ElectricCharge
				minQuantity = 1.0
				title = Craft must have Electric Charge for 24 hours
				hideChildren = true
			}
		}
	}

	// Return Home Safely
	PARAMETER
	{
		name = VesselParameterGroup
		type = VesselParameterGroup
		title = Recover the film canister
		vessel = @/craft

		PARAMETER
		{
			name = ReachState
			type = ReachState

			targetBody = HomeWorld()
			situation = LANDED
			situation = SPLASHED

			disableOnStateChange = false
		}
		completeInSequence = true
		disableOnStateChange = false
	}

	// Intact
	PARAMETER
	{
		name = All
		type = All
		title = Intact

		PARAMETER
		{
			name = VesselNotDestroyed
			type = VesselNotDestroyed
			title = without destroying your aircraft

			vessel = @/craft
		}
		disableOnStateChange = true
	}
}