CONTRACT_TYPE:NEEDS[Bluedog_DB]
{
    name = HeavyFerret
	title = Heavy Ferret Satellite
    group = Surveillance
	

	description = <b>Heavy Ferrets Program</b><br><br>Air Force Heavy Ferret Program refers to a series of SIGINT reconnaissance satellites launched and operated by the United States Air Force and National Reconnaissance Office during the 1960s. The intercepted data and their location were stored on magnetic tape, and subsequently transmitted to tracking and acquisition ground stations. <br><br>The reward of this contract will slowly increase over time but will be reset to 0 after each completion.<br><b>Current reward is at @rewardFactorPercent % of its nominal value. Elapsed/Expected Days: @elapsedDays / @SpacelinesContracts:expectedDays_HeavyFerret<br>Number of Contracts Completed: @index / unlimited</b>
    genericDescription = Launch a Heavy Ferret Satellite
	synopsis = Launch a "Heavy Ferret" satellite into polar orbit of @targetBody and perform ELINT/SIGINT recon of the specified areas.

    completedMessage = Mission Success!

	cancellable = true
	declinable = true
	autoAccept = false
	minExpiry = 0
	maxExpiry = 0
	maxCompletions = 0
	maxSimultaneous = 1
	deadline = 180

	targetBody = HomeWorld()
	
	// ------------------------------------------------------------------------
	// Rewards
	// ------------------------------------------------------------------------
	prestige = Trivial  // Exceptional
	advanceFunds = @rewardReputation * @SpacelinesContracts:KerbucksTrivial
	rewardFunds = @advanceFunds * @SpacelinesContracts:KerbucksRewardTrivial
	failureFunds = @advanceFunds * 1.1
	rewardScience = 0
    rewardReputation = 100 * @rewardFactor
	failureReputation = @rewardReputation * 0.5

	// ------------------------------------------------------------------------
	// Requirements
	// ------------------------------------------------------------------------

	DATA
	{
		type = int
		index = $HeavyFerretSat_Count + 0
	}

	BEHAVIOUR
	{
		name = IncrementTheCount
		type = Expression

		CONTRACT_OFFERED
		{
			RepeatSat_Completion = ($RepeatSat_Completion + 0) == 0 ? (UniversalTime() - @SpacelinesContracts:expectedDays_HeavyFerret * 86400) : ($RepeatSat_Completion + 0)
		}
		CONTRACT_COMPLETED_SUCCESS
		{
			HeavyFerretSat_Count = $HeavyFerretSat_Count + 1
			RepeatSat_Completion = UniversalTime()
		}
	}

	DATA
	{
		type = int
		antiGrindCompletion = $RepeatSat_Completion == 0 ? (UniversalTime() - @SpacelinesContracts:expectedDays_EarlyComSat * 86400) : $RepeatSat_Completion
	}

	DATA
	{
		type = float
		elapsedDays = Round((UniversalTime() - @antiGrindCompletion) / 86400.0)
		rewardFactor = Log(Max(@elapsedDays / @SpacelinesContracts:expectedDays_EarlyComSat * 20 - 9, 1), 2) / 3.46
		rewardFactorPercent = Round(@rewardFactor * 100, 1)
	}
	
    // Hardcoded list of specific experiments
    DATA
    {
        name = experimentslist
		title = experimentslist
		type = List<ScienceExperiment>
        hidden = true

        experiments = [bd_SIGINT]
    }
	
	// Randomly select 3 valid biomes to study from low space.
    DATA
    {
		type = List<ScienceSubject>
        hidden = true

        scienceSubjectsTemp1 = AllScienceSubjectsByBodyExperiment([@targetBody], @experiments)
		scienceSubjectsTemp2 = @scienceSubjectsTemp1.Where(s => !s.Biome().IsKSC())
		scienceSubjectsTemp3 = @scienceSubjectsTemp2.Where(s => s.Situation() == InSpaceLow)
        scienceSubjects = @scienceSubjectsTemp3.Random(3)
    }

	REQUIREMENT
	{
		name = All
		type = All

		REQUIREMENT
		{
			name = CompleteContract
			type = CompleteContract
			contractType = PanoramicOpticalSurveillanceImagery
			minCount = 1
			cooldownDuration = 0d
		}

		REQUIREMENT
		{
			name = CompleteContract
			type = CompleteContract
			contractType = Poppy20Constellation2
			minCount = 2
			cooldownDuration = 0d
		}
	}
	
	PARAMETER
    {
        name = Heavy Ferret Satellite
        type = VesselParameterGroup
        title = Launch a new Heavy Ferret satellite
		
		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			title = The satellite must be a new vessel
		}
		
		PARAMETER
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
		}

        PARAMETER
        {
            name = All
            type = All
            title = Needs to be an Agena B/D based satellite

            PARAMETER
            {
                name = PartValidation
                type = PartValidation
                title = Requires an XLR81 Engine

                part = bluedog_Agena_Engine_XLR81
            }

            PARAMETER
            {
                name = PartValidation
                type = PartValidation
                title = Requires an Agena Tank

                part = bluedog_Agena_Tank_Long
            }
        }

        PARAMETER
		{
			name = Orbit
			type = Orbit
			title = Achieve the specified polar low space orbit
			
			minAltitude = Random(0.4,0.5) * @targetBody.SpaceAltitudeThreshold()
			maxAltitude = @targetBody.SpaceAltitudeThreshold() * 0.6
			
			maxEccentricity = 0.1
			minInclination = Random(70,85)
			maxInclination = Random(90,105)
			disableOnStateChange = true
		}
	}
}
