CONTRACT_TYPE
{
	name = EarlyWeatherSatellite
	title = First Weather Satellite  // TIROS
	group = ScienceSatellites

	description = <b>Weather Satellites Program</b><br><br>The Atmospheric Analysis Satellite that we launched was a good first step to understanding how the upper atmosphere affects the weather. However, our meteorologists want to see images of the clouds to better assess the situation.&br;&br;Launch our first official weather satellite into orbit.
	synopsis = Launch a weather satellite
	completedMessage = Success! The images provided from this satellite have proven that weather satellites can be extremely effective in helping meteorologists predict the weather.
	
	cancellable = true
	declinable = true
	autoAccept = false
	minExpiry = 5
	maxExpiry = 10
	maxCompletions = 1
	maxSimultaneous = 1
	deadline = 90

	targetBody = HomeWorld()
	
	// ------------------------------------------------------------------------
	// Rewards
	// ------------------------------------------------------------------------
	prestige = Trivial
	advanceFunds = 0
	rewardFunds = @rewardReputation * @SpacelinesContracts:KerbucksReputationRewardMultiplier
	failureFunds = @rewardFunds
	rewardScience = 0
	rewardReputation = 3
	failureReputation = @rewardReputation

	// ------------------------------------------------------------------------
	// Requirements
	// ------------------------------------------------------------------------
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = FirstImagingWeatherSat
	}

	// Deactivate contract once a second generation weather satellite has flown
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = SecondGenWeather
		minCount = 1
		cooldownDuration = 0d
	}

	DATA
	{
		type = int
		index = $EarlyWeatherSat_Count + 0
	}

	BEHAVIOUR
	{
		name = IncrementTheCount
		type = Expression

		CONTRACT_OFFERED
		{
			RepeatSat_Completion = ($RepeatSat_Completion + 0) == 0 ? (UniversalTime() - @SpacelinesContracts:expectedDays_EarlyWeatherSat * 86400) : ($RepeatSat_Completion + 0)
		}
		CONTRACT_COMPLETED_SUCCESS
		{
			EarlyWeatherSat_Count = $EarlyWeatherSat_Count + 1
			RepeatSat_Completion = UniversalTime()
		}
	}

	DATA
	{
		type = int
		antiGrindCompletion = $RepeatSat_Completion == 0 ? (UniversalTime() - @SpacelinesContracts:expectedDays_EarlyWeatherSat * 86400) : $RepeatSat_Completion
	}

	DATA
	{
		type = float
		elapsedDays = Round((UniversalTime() - @antiGrindCompletion) / 86400.0)
		rewardFactor = Log(Max(@elapsedDays / @SpacelinesContracts:expectedDays_EarlyWeatherSat * 20 - 9, 1), 2) / 3.46
		rewardFactorPercent = Round(@rewardFactor * 100, 1)
	}

	PARAMETER
	{
		name = EarlyWeatherSatellite
		type = VesselParameterGroup
		title = Early weather satellite
		define = EarlyWeatherSatellite

		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			title = Launch a new vessel
			hideChildren = true
		}
		
		PARAMETER
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}

		PARAMETER
        {
            name = RequiredParts
            type = Any
          
            title = You'll need a weather observation experiment

            PARAMETER:NEEDS[Bluedog_DB]
			{
				name = PartValidation
				type = PartValidation
				title = Carry a weather observation experiment
				
				VALIDATE
				{
					MODULE
					{
						name = Experiment
						experimentID = bd_weather
					}
				}
			}
			PARAMETER
			{
				name = PartValidation
				type = PartValidation
				title = Carry an IR telescope
				
				VALIDATE
				{
					MODULE
					{
						name = Experiment
						experimentID = infraredTelescope
					}
				}
			}
        }

		PARAMETER
		{
			name = HasPower
			title = Have a positive energy balance
			type = ResourceConsumption
			resource = ElectricCharge
			minRate = -1.0
		}

		PARAMETER
		{
			name = Orbit
			type = Orbit
			minAltitude = 150000
			maxAltitude = 450000
			maxEccentricity = 0.005
			minInclination = 45
			disableOnStateChange = true
			title = Achieve an orbit with an eccentricity below 0.005
			
			PARAMETER
			{
				name = Duration
				type = Duration

				duration = 2m

				preWaitText = Check for stable orbit
				waitingText = Checking for stable orbit
				completionText = Stable orbit: Confirmed
			}
		}
	}
}